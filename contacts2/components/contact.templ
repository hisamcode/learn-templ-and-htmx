package components

import "fmt"

templ PageContacts(contacts Contacts, pagination Pagination) {
	<div id="page-contacts">
		<table>
			<thead>
				<tr>
					<td>ID</td>
					<td>Name</td>
					<td>Email</td>
					<td>Phone</td>
					<td></td>
				</tr>
			</thead>
			<tbody>
				@ListContacts(contacts)
			</tbody>
		</table>
		@paginationButton(pagination)
	</div>
}

templ ListContacts(contacts Contacts) {
	for _, v := range contacts.Data {
		<tr>
			<td>{ fmt.Sprintf("%d", v.ID) }</td>
			<td>{ v.Name }</td>
			<td>{ v.Email }</td>
			<td>{ v.Phone }</td>
			<td>
				@buttonViewContact(fmt.Sprintf("%d", v.ID))
				@buttonEditContact(fmt.Sprintf("%d", v.ID))
				@buttonDeleteContact(fmt.Sprintf("%d", v.ID), v.Name)
			</td>
		</tr>
	}
}

templ PageDetailContact(form Form) {
	<div>
		<div>
			ID : { form.Values["ID"] }
		</div>
		<div>
			Name : { form.Values["name"] }
		</div>
		<div>
			Email : { form.Values["email"] }
		</div>
		<div>
			Phone : { form.Values["phone"] }
		</div>
		<div>
			@buttonEditContact(form.Values["ID"])
			@buttonDeleteContact(form.Values["ID"], form.Values["name"])
		</div>
	</div>
}

templ PageCreateContact(form Form) {
	<form>
		<div>
			<label for="name">Name</label>
			<input type="text" id="name" name="name" value={ form.Values["name"] }/>
			<span>{ form.Errors["name"] }</span>
		</div>
		<div>
			<label for="email">Email</label>
			<input
				type="email"
				id="create-email"
				name="email"
				value={ form.Values["email"] }
				hx-post="/contacts/validate-email"
				hx-trigger="keyup delay:500ms changed"
				hx-target="next span"
			/>
			<span>{ form.Errors["email"] }</span>
		</div>
		<div>
			<label for="phone">Phone</label>
			<input type="text" id="phone" name="phone" value={ form.Values["phone"] }/>
			<span>{ form.Errors["phone"] }</span>
		</div>
		<div>
			<button
				hx-post="/contacts"
				hx-target="body"
				hx-push-url="true"
			>Create</button>
		</div>
	</form>
}

templ PageEditContact(form Form) {
	<form>
		<div>
			<label for="name">Name</label>
			<input type="text" id="name" name="name" value={ form.Values["name"] }/>
			<span>{ form.Errors["name"] }</span>
		</div>
		<div>
			<label for="email">Email</label>
			<input
				type="email"
				id="edit-email"
				name="email"
				value={ form.Values["email"] }
				hx-post="/contacts/validate-email"
				hx-trigger="keyup delay:500ms changed"
				hx-target="next span"
			/>
			<span>{ form.Errors["email"] }</span>
		</div>
		<div>
			<label for="phone">Phone</label>
			<input type="text" id="phone" name="phone" value={ form.Values["phone"] }/>
			<span>{ form.Errors["phone"] }</span>
		</div>
		<div>
			<button
				hx-put={ fmt.Sprintf("/contacts/%s", form.Values["ID"]) }
				hx-target="body"
				hx-push-url="true"
			>Edit</button>
		</div>
	</form>
}

templ Header() {
	<div hx-boost="true">
		<a href="/contacts">Contacts</a>
		<a href="/contacts/create">Create Contact</a>
	</div>
}

templ buttonEditContact(id string) {
	<button
		hx-get={ fmt.Sprintf("/contacts/%s/edit", id) }
		hx-push-url="true"
		hx-target="body"
	>Edit</button>
}

templ buttonDeleteContact(id string, name string) {
	<button
		hx-delete={ fmt.Sprintf("/contacts/%s", id) }
		hx-confirm={ fmt.Sprintf("Are you sure want to delete(%s)?", name) }
		hx-target="body"
	>Delete</button>
}

templ buttonViewContact(id string) {
	<button
		hx-get={ fmt.Sprintf("/contacts/%s", id) }
		hx-push-url="true"
		hx-target="body"
	>View</button>
}

templ paginationButton(pagination Pagination) {
	<div>
		<button
			id="button-pagination-prev"
			if pagination.Page > 1 {
				hx-get={ fmt.Sprintf("/contacts?page=%d", pagination.Page-1) }
			} else {
				hx-disable
			}
			hx-target="#page-contacts"
			hx-push-url="true"
		>prev</button>
		<button
			id="button-pagination-next"
			if pagination.Page < pagination.MaxPage {
				hx-get={ fmt.Sprintf("/contacts?page=%d", pagination.Page+1) }
			} else {
				hx-disable
			}
			hx-target="#page-contacts"
			hx-push-url="true"
		>next</button>
	</div>
}

templ Layout(content templ.Component) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Contacts</title>
			<script src="/js/htmx.min.js"></script>
		</head>
		<body>
			@Header()
			@content
		</body>
	</html>
}

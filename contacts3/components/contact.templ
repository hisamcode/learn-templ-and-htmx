package components

import "fmt"

templ MainSearch(form Form) {
	<div id="main-search" hx-boost="true">
		<label for="search">Search</label>
		<input
			type="text"
			name="q"
			id="search"
			hx-get="/contacts"
			hx-trigger="keyup delay:500ms changed"
			value={ form.Values["q"] }
			hx-indicator="#main-search-indicator"
		/>
		<button>Search</button>
		<span id="main-search-indicator" class="htmx-indicator">loading...</span>
	</div>
}

templ MainSearchErr(form Form) {
	<div>
		<table>
			<tbody id="tbody" hx-swap-oob="#tbody">
				<tr>
					<td colspan="5" style="text-align:center; color:red;">{ form.Errors["q"] }</td>
				</tr>
			</tbody>
		</table>
		<div id="pagination" hx-swap-oob="#pagination"></div>
	</div>
}

templ TableContacts(contacts Contacts, pagination Pagination, oob bool, showPagination bool) {
	<form x-data="{selected: []}">
		<table
			id="table-contacts"
			if oob {
				hx-swap-oob="true"
			}
		>
			<thead>
				<tr>
					<td></td>
					<td>ID</td>
					<td>Name</td>
					<td>Email</td>
					<td>Phone</td>
					<td></td>
				</tr>
			</thead>
			<tbody id="tbody">
				for _, v:= range contacts.Data {
					<tr>
						<td>
							<input
								type="checkbox"
								name="selected_contact_ids"
								value={ fmt.Sprintf("%d", v.ID) }
								x-model="selected"
							/>
						</td>
						<td>{ fmt.Sprintf("%d", v.ID) }</td>
						<td>{ v.Name }</td>
						<td>{ v.Email }</td>
						<td>{ v.Phone }</td>
						<td>
							<button>View</button>
							<button>Edit</button>
							<button>Delete</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
		<hr/>
		// <template x-if="selected.length > 0">
		<div class="box info tool-bar" x-show="selected.length > 0">
			<slot x-text="selected.length"></slot>
			Contacts selected
			<div x-text="selected"></div>
			<button
				type="button"
				class="bad bg color border"
				hx-post="/contacts/bulk-delete"
				hx-target="body"
				hx-trigger="confirmed"
				@click="SA($el, {
					title: `Delete ${selected.length} contacts ?`,
					showCancelButton: true,
					confirmButtonText: 'Delete'
				})"
			>Delete</button>
			<hr/>
			<button type="button" x-on:click="selected = []">Cancel</button>
		</div>
		// </template>
	</form>
	<hr/>
	@PaginationButton(pagination, oob, showPagination)
}

templ PaginationButton(pagination Pagination, oob bool, showPagination bool) {
	<div
		id="pagination"
		if oob {
			hx-swap-oob="true"
		}
	>
		if showPagination {
			// page 2
			if pagination.Page >= 2 {
				<button
					hx-target="body"
					hx-get={ fmt.Sprintf("/contacts?page=%d", pagination.Page-1) }
				>Prev</button>
			}
			<span>Page: { fmt.Sprintf("%d", pagination.Page) }</span>
			if pagination.Page < pagination.MaxPage {
				<button
					hx-target="body"
					hx-get={ fmt.Sprintf("/contacts?page=%d", pagination.Page+1) }
				>Next</button>
			}
		}
	</div>
}

templ Layout(content templ.Component, pagination Pagination, form Form) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>Document</title>
			<link rel="stylesheet" href="/css/missing.css"/>
			<script defer src="/js/alphine.js"></script>
			<script src="/js/htmx.min.js"></script>
			<script src="/js/sweetalert.js"></script>
			<script src="/js/main.js"></script>
		</head>
		<body class="padding">
			<div x-data="{test:'haha'}">
				<div x-text="test"></div>
			</div>
			<div id="menu">
				<a href="/contacts">Contacts</a> | 			
				<a href="/contacts/create">Create Contacts ({ fmt.Sprintf("%d Contacts", pagination.Total) })</a>
			</div>
			@MainSearch(form)
			@content
		</body>
	</html>
}
